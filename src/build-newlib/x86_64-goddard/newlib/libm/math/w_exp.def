@node exp
@section @code{exp}, @code{expf}---exponential
@findex exp
@findex expf
@strong{Synopsis}
@example
#include <math.h>
double exp(double @var{x});
float expf(float @var{x});

@end example
@strong{Description}@*
@code{exp} and @code{expf} calculate the exponential of @var{x}, that is, 
@ifnottex
e raised to the power @var{x} (where e
@end ifnottex
@tex
$e^x$ (where $e$
@end tex
is the base of the natural system of logarithms, approximately 2.71828).

You can use the (non-ANSI) function @code{matherr} to specify
error handling for these functions.

@*
@strong{Returns}@*
On success, @code{exp} and @code{expf} return the calculated value.
If the result underflows, the returned value is @code{0}.  If the
result overflows, the returned value is @code{HUGE_VAL}.  In
either case, @code{errno} is set to @code{ERANGE}.

@*
@strong{Portability}@*
@code{exp} is ANSI C.  @code{expf} is an extension.


@*
