@node wcsftime
@section @code{wcsftime}--convert date and time to a formatted wide-character string
@findex wcsftime
@strong{Synopsis}
@example
#include <time.h>
#include <wchar.h>
size_t wcsftime(wchar_t *@var{s}, size_t @var{maxsize},
    const wchar_t *@var{format}, const struct tm *@var{timp});

@end example
@strong{Description}@*
@code{wcsftime} is equivalent to @code{strftime}, except that:
@itemize @bullet

@item The argument s points to the initial element of an array of wide characters
into which the generated output is to be placed.
@item The argument maxsize indicates the limiting number of wide characters.
@item The argument format is a wide-character string and the conversion specifiers
are replaced by corresponding sequences of wide characters.
@item The return value indicates the number of wide characters.
@end itemize

(The difference in all of the above being wide characters versus regular
characters.)
See @code{strftime} for the details of the format specifiers.

@*
@strong{Returns}@*
When the formatted time takes up no more than @var{maxsize} wide characters,
the result is the length of the formatted wide string.  Otherwise, if the
formatting operation was abandoned due to lack of room, the result is
@code{0}, and the wide-character string starting at @var{s} corresponds to just those
parts of @code{*@var{format}} that could be completely filled in within the
@var{maxsize} limit.

@*
@strong{Portability}@*
C99 and POSIX require @code{wcsftime}, but do not specify the contents of
@code{*@var{s}} when the formatted string would require more than
@var{maxsize} characters.  Unrecognized specifiers and fields of
@code{timp} that are out of range cause undefined results.  Since some
formats expand to 0 bytes, it is wise to set @code{*@var{s}} to a nonzero
value beforehand to distinguish between failure and an empty string.
This implementation does not support @code{s} being NULL, nor overlapping
@code{s} and @code{format}.

@code{wcsftime} requires no supporting OS subroutines.

@*
@strong{See Also}@*
@code{strftime}

@*
