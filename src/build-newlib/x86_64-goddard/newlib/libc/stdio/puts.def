@node puts
@section @code{puts}---write a character string
@findex puts
@findex _puts_r
@strong{Synopsis}
@example
#include <stdio.h>
int puts(const char *@var{s});

int _puts_r(struct _reent *@var{reent}, const char *@var{s});

@end example
@strong{Description}@*
@code{puts} writes the string at @var{s} (followed by a newline, instead of
the trailing null) to the standard output stream.

The alternate function @code{_puts_r} is a reentrant version.  The extra
argument @var{reent} is a pointer to a reentrancy structure.

@*
@strong{Returns}@*
If successful, the result is a nonnegative integer; otherwise, the
result is @code{EOF}.

@*
@strong{Portability}@*
ANSI C requires @code{puts}, but does not specify that the result on
success must be @code{0}; any non-negative value is permitted.

Supporting OS subroutines required: @code{close}, @code{fstat}, @code{isatty},
@code{lseek}, @code{read}, @code{sbrk}, @code{write}.

@*
