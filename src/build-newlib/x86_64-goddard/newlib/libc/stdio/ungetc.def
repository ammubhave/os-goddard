@node ungetc
@section @code{ungetc}---push data back into a stream
@findex ungetc
@findex _ungetc_r
@strong{Synopsis}
@example
#include <stdio.h>
int ungetc(int @var{c}, FILE *@var{stream});

int _ungetc_r(struct _reent *@var{reent}, int @var{c}, FILE *@var{stream});

@end example
@strong{Description}@*
@code{ungetc} is used to return bytes back to @var{stream} to be read again.
If @var{c} is EOF, the stream is unchanged.  Otherwise, the unsigned
char @var{c} is put back on the stream, and subsequent reads will see
the bytes pushed back in reverse order.  Pushed byes are lost if the
stream is repositioned, such as by @code{fseek}, @code{fsetpos}, or
@code{rewind}.

The underlying file is not changed, but it is possible to push back
something different than what was originally read.  Ungetting a
character will clear the end-of-stream marker, and decrement the file
position indicator.  Pushing back beyond the beginning of a file gives
unspecified behavior.

The alternate function @code{_ungetc_r} is a reentrant version.  The
extra argument @var{reent} is a pointer to a reentrancy structure.

@*
@strong{Returns}@*
The character pushed back, or @code{EOF} on error.

@*
@strong{Portability}@*
ANSI C requires @code{ungetc}, but only requires a pushback buffer of one
byte; although this implementation can handle multiple bytes, not all
can.  Pushing back a signed char is a common application bug.

Supporting OS subroutines required: @code{sbrk}.

@*
