@node getchar
@section @code{getchar}---read a character (macro)
@findex getchar
@findex _getchar_r
@strong{Synopsis}
@example
#include <stdio.h>
int getchar(void);

int _getchar_r(struct _reent *@var{reent});

@end example
@strong{Description}@*
@code{getchar} is a macro, defined in @code{stdio.h}.  You can use @code{getchar}
to get the next single character from the standard input stream.
As a side effect, @code{getchar} advances the standard input's
current position indicator.

The alternate function @code{_getchar_r} is a reentrant version.  The
extra argument @var{reent} is a pointer to a reentrancy structure.

@*
@strong{Returns}@*
The next character (read as an @code{unsigned char}, and cast to
@code{int}), unless there is no more data, or the host system reports a
read error; in either of these situations, @code{getchar} returns @code{EOF}.

You can distinguish the two situations that cause an @code{EOF} result by
using `@code{ferror(stdin)}' and `@code{feof(stdin)}'.

@*
@strong{Portability}@*
ANSI C requires @code{getchar}; it suggests, but does not require, that
@code{getchar} be implemented as a macro.

Supporting OS subroutines required: @code{close}, @code{fstat}, @code{isatty},
@code{lseek}, @code{read}, @code{sbrk}, @code{write}.

@*
