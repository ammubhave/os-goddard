@node fgets
@section @code{fgets}---get character string from a file or stream
@findex fgets
@findex _fgets_r
@strong{Synopsis}
@example
#include <stdio.h>
char *fgets(char *restrict @var{buf}, int @var{n}, FILE *restrict @var{fp});

#include <stdio.h>
char *_fgets_r(struct _reent *@var{ptr}, char *restrict @var{buf}, int @var{n}, FILE *restrict @var{fp});

@end example
@strong{Description}@*
Reads at most @var{n-1} characters from @var{fp} until a newline
is found. The characters including to the newline are stored
in @var{buf}. The buffer is terminated with a 0.

The @code{_fgets_r} function is simply the reentrant version of
@code{fgets} and is passed an additional reentrancy structure
pointer: @var{ptr}.

@*
@strong{Returns}@*
@code{fgets} returns the buffer passed to it, with the data
filled in. If end of file occurs with some data already
accumulated, the data is returned with no other indication. If
no data are read, NULL is returned instead.

@*
@strong{Portability}@*
@code{fgets} should replace all uses of @code{gets}. Note however
that @code{fgets} returns all of the data, while @code{gets} removes
the trailing newline (with no indication that it has done so.)

Supporting OS subroutines required: @code{close}, @code{fstat}, @code{isatty},
@code{lseek}, @code{read}, @code{sbrk}, @code{write}.

@*
