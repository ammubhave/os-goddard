@node abort
@section @code{abort}---abnormal termination of a program
@findex abort
@strong{Synopsis}
@example
#include <stdlib.h>
void abort(void);

@end example
@strong{Description}@*
Use @code{abort} to signal that your program has detected a condition it
cannot deal with.  Normally, @code{abort} ends your program's execution.

Before terminating your program, @code{abort} raises the exception @code{SIGABRT}
(using `@code{raise(SIGABRT)}').  If you have used @code{signal} to register
an exception handler for this condition, that handler has the
opportunity to retain control, thereby avoiding program termination.

In this implementation, @code{abort} does not perform any stream- or
file-related cleanup (the host environment may do so; if not, you can
arrange for your program to do its own cleanup with a @code{SIGABRT}
exception handler).

@*
@strong{Returns}@*
@code{abort} does not return to its caller.

@*
@strong{Portability}@*
ANSI C requires @code{abort}.

Supporting OS subroutines required: @code{_exit} and optionally, @code{write}.

@*
