@node wcstombs
@section @code{wcstombs}---minimal wide char string to multibyte string converter
@findex wcstombs
@strong{Synopsis}
@example
#include <stdlib.h>
size_t wcstombs(char *restrict @var{s}, const wchar_t *restrict @var{pwc}, size_t @var{n});

@end example
@strong{Description}@*
When _MB_CAPABLE is not defined, this is a minimal ANSI-conforming 
implementation of @code{wcstombs}.  In this case,
all wide-characters are expected to represent single bytes and so
are converted simply by casting to char.

When _MB_CAPABLE is defined, this routine calls @code{_wcstombs_r} to perform
the conversion, passing a state variable to allow state dependent
decoding.  The result is based on the locale setting which may
be restricted to a defined set of locales.

@*
@strong{Returns}@*
This implementation of @code{wcstombs} returns @code{0} if
@var{s} is @code{NULL} or is the empty string; 
it returns @code{-1} if _MB_CAPABLE and one of the
wide-char characters does not represent a valid multi-byte character;
otherwise it returns the minimum of: @code{n} or the
number of bytes that are transferred to @code{s}, not including the
nul terminator.

If the return value is -1, the state of the @code{pwc} string is
indeterminate.  If the input has a length of 0, the output
string will be modified to contain a wchar_t nul terminator if
@code{n} > 0.

@*
@strong{Portability}@*
@code{wcstombs} is required in the ANSI C standard.  However, the precise
effects vary with the locale.

@code{wcstombs} requires no supporting OS subroutines.

@*
